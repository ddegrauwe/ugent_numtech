plot(1:10)
ls(1)
ls()
ls(2)
q()
q()
library('Rgif')
plot(1:10)
library('Rpng')
library('png')
ls(1)
ls(2)
?writePNG
library('animation')
saveGIF
?saveGIF
saveGIF({
for (i in 1:10) plot(runif(10), ylim = 0:1)
})
saveSWF({
for (i in 1:10) plot(runif(10), ylim = 0:1)
})
?smooth.spline
x=1:10
y=runif(10)
plot(x,y)
plot(x,y,type='b')
S=smooth.spline(x,y)
xx=seq(1,10,len=91)
yy=predict(S,xx)
yy
points(xx,yy$y,col=2,type='l')
attach(cars)
plot(speed, dist, main = "data(cars)  &  smoothing splines")
cars.spl <- smooth.spline(speed, dist)
(cars.spl)
## This example has duplicate points, so avoid cv = TRUE
lines(cars.spl, col = "blue")
lines(smooth.spline(speed, dist, df = 10), lty = 2, col = "red")
legend(5,120,c(paste("default [C.V.] => df =",round(cars.spl$df,1)),
"s( * , df = 10)"), col = c("blue","red"), lty = 1:2,
bg = 'bisque')
detach()
y18 <- c(1:3, 5, 4, 7:3, 2*(2:5), rep(10, 4))
xx  <- seq(1, length(y18), len = 201)
(s2  <- smooth.spline(y18)) # GCV
(s02  <- smooth.spline(y18, spar = 0.2))
(s02. <- smooth.spline(y18, spar = 0.2, cv = NA))
plot(y18, main = deparse(s2$call), col.main = 2)
lines(s2, col = "gray"); lines(predict(s2, xx), col = 2)
lines(predict(s02, xx), col = 3); mtext(deparse(s02$call), col = 3)
## The following shows the problematic behavior of 'spar' searching:
(s2  <- smooth.spline(y18, control =
list(trace = TRUE, tol = 1e-6, low = -1.5)))
(s2m <- smooth.spline(y18, cv = TRUE, control =
list(trace = TRUE, tol = 1e-6, low = -1.5)))
y18 <- c(1:3, 5, 4, 7:3, 2*(2:5), rep(10, 4))
xx  <- seq(1, length(y18), len = 201)
(s2  <- smooth.spline(y18)) # GCV
(s02  <- smooth.spline(y18, spar = 0.2))
(s02. <- smooth.spline(y18, spar = 0.2, cv = NA))
plot(y18, main = deparse(s2$call), col.main = 2)
lines(s2, col = "gray"); lines(predict(s2, xx), col = 2)
lines(predict(s02, xx), col = 3); mtext(deparse(s02$call), col = 3)
xx
yy
x
y
s2=smooth.spline(y)
predict(s2,xx)
yy=y18 <- c(1:3, 5, 4, 7:3, 2*(2:5), rep(10, 4))
xx  <- seq(1, length(y18), len = 201)
(s2  <- smooth.spline(y18)) # GCV
(s02  <- smooth.spline(y18, spar = 0.2))
(s02. <- smooth.spline(y18, spar = 0.2, cv = NA))
plot(y18, main = deparse(s2$call), col.main = 2)
lines(s2, col = "gray"); lines(predict(s2, xx), col = 2)
lines(predict(s02, xx), col = 3); mtext(deparse(s02$call), col = 3)
y=c(1:3, 5, 4, 7:3, 2*(2:5), rep(10, 4))
''
''
''''
123
?splinefun
library('animation')
q()
loadResults()
loadResults
?loadResults
c=0.5; dt=1; dx=1; k=seq(0,pi/dx,len=101);
i
I
j
0+1i
1i
1i**2
omega=-1/(1i*dt)*log(1+dt*c*(exp(1i*k*dx)-1)/dx)
plot(k,real(omega))
plot(k,Re(omega))
plot(k,Im(omega))
plot(k,exp(Im(omega))
)
plot(k,-Re(omega))
c=1.1; dt=1; dx=1; k=seq(0,pi/dx,len=101);
omega=-1/(1i*dt)*log(1+dt*c*(exp(1i*k*dx)-1)/dx)
plot(k,exp(Im(omega)))
plot(k,Re(omega))
omega=-1/(1i*dt)*log(1+dt*c*(exp(-1i*k*dx)-1)/dx)
plot(k,Re(omega))
plot(k,Re(omega)); points(k,c*k)
omega=asin(c*dt/dx*sin(k*dx))
c=0.9; dt=1; dx=1; k=seq(0,pi/dx,len=101);
omega=asin(c*dt/dx*sin(k*dx))
plot(k,omega)
c=0.5;dt=1;dx=1;k=seq(0,pi/dx,len=101)
w=-1/(1i*dt)*log(1+c*dt/dx*(exp(1i*k*dx)-1))
w
plot(k,Re(w))
w=-1/(1i*dt)*log(1+c*dt/dx*(exp(-1i*k*dx)-1))
plot(k,Re(w))
plot(k,Re(w),type='l')
points(k,c*k)
c=0.9;dt=1;dx=1;k=seq(0,pi/dx,len=101)
w=-1/(1i*dt)*log(1+c*dt/dx*(exp(-1i*k*dx)-1))
plot(k,Re(w),type='l')
points(k,c*k)
plot(k,Im(w),type='l')
c=1.5;dt=1;dx=1;k=seq(0,pi/dx,len=101)
w=-1/(1i*dt)*log(1+c*dt/dx*(exp(-1i*k*dx)-1))
plot(k,Im(w),type='l')
q()
setwd("H:/numtech/lessons/nt5")
source('swe1D/show.R')
showResults('swe1D/output.dat')
showResults('swe1D/output.dat')
showResults('swe1D/output.dat')
source('diffusion/show.R')
showResults('diffusion/output.dat')
showResults('diffusion/output.dat')
source('burger/show.R)
')'
)
))
''
source('burger/show.R')
showResults('burger/output_burger.dat')
showResults('burger/output_burger.dat')
warnings()
q()
